FORMAT: 1A

# rfdaemon API
rfdaemon API is a simple service to queue, run and inspect results of [RobotFramework](http://robotfrawework.org) suites remotely.

## Authentication
Currently the rfdeamon API ver. 1.0 does not provide any authenticated access. All security issues should be solved separately.

## Media Types
Both JSON and HTML media-types are used to represent resources states and affordance.

Requests with a message-body are using plain JSON to set or update resource states.

## Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.


# Suites Collection [/suites]
## List all Suites [GET]
+ Response 200 (application/json)

        [{
          "suite": "v210 inventory check", "tags": [ "inventory", "BIOS", "BMC", "branding" ], "documentation" : "Performs a basic inventory check of a v210 node"
        }, {
          "suite": "Ethernet bandwidth" , "tags": [ "Ethernet", "benchmark"], "documentation" : "Do a simple bandwidth benchmark of the Ethernet port"
        }]
+ Response 200 (text/html)

        <!doctype html>
            <head>
                <title> System under the test </title>
            </head>
            <body>
                <table>
                <tr>
                    <th> Suite name </th>
                    <th> Tags </th>
                    <th> Documentation </th>
                </tr>
                <tr>
                    <td> v210 inventory check </td>
                    <td> inventory, BIOS, BMC, branding </td>
                    <td> Performs a basic inventory check of a v210 node </td>
                </tr>
                <tr>
                    <td> Ethernet bandwidth </td>
                    <td> Ethernets, benchmark </td>
                    <td> Do a simple bandwidth benchmark of the Ethernet port </td>
                </tr>
            </body>


## Suites collection version information [/suites/__version]
### Get current version details [GET]
+ Response 200 (application/json)

        { "841983b18323440e00dd5683beda21a2fd16bbdc" : 
            { "author" : "Sergey Kleymenov <skleymenov@hurricaneclouds.co>",
                "date" : "Thu, 29 May 2014 23:09:24 +0400",
                "title" : "Documentation added"
            }
        }

### Update suite library [POST]
+ Response 200 (application/json)

        { "841983b18323440e00dd5683beda21a2fd16bbdc" : 
            { "author" : "Sergey Kleymenov <skleymenov@hurricaneclouds.co>",
                "date" : "Thu, 29 May 2014 23:09:24 +0400",
                "title" : "Documentation added"
            }
        }

## Suite [/suites/{name}]
A single Suite object with all its details

+ Parameters
    + name (required, sting) ... String `name` of the Suite to perform action with.

### Retrieve a Suite [GET]
+ Response 200 (application/json)

        {"suite": "v210 inventory check", "tags": [ "inventory", "BIOS", "BMC", "branding" ], "documentation" : "Performs a basic inventory check of a v210 node"}

+ Response 200 (text/html)


                


            
