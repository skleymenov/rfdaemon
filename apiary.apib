FORMAT: 1A

# rfdaemon API
rfdaemon API is a simple service to queue, run and inspect results of [RobotFramework](http://robotfrawework.org) suites remotely.

## Authentication
Currently the rfdeamon API ver. 1.0 does not provide any authenticated access. All security issues should be solved separately.

## Media Types
Both plain JSON and HTML media-types are used to represent resources states and affordance.
HTML media-type of the resources states representaion are not documented here.

Requests with a message-body are using plain JSON to set or update resource states.

## Error States
The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.

### Typical Server Responses

- 200 `OK` - The request was successful (some API calls may return 201 or 202 instead).
- 201 `Created` - The request was successful and a resource was created.
- 202 `Accepted` - The request was successful, but the processing has not been completed.
- 204 `No Content` - The request was successful, but there is no representation to return (that is, the response is empty).
- 400 `Bad Request` - The request could not be understood or was missing required parameters.
- 404 `Not Found` - Resource was not found.
- 405 `Method Not Allowed` - Requested method is not supported for the specified resource.
- 503 `Service Unavailable` - The service is temporary unavailable (e. g. scheduled maintenence). Try again later.

# rfdaemon API Root [/]
rfdaemon API entry point.

This resource provides a very basic summary of the current service state.

Following attrbutes are exported:

- `version` - Version of the *rfdaemon*
- `hostname` - Human-readable hostname of the machine
- `hostid` - Very uniq host ID
- `period` - The time in Unix format, when the machine was booted up. (*btime* from */proc/stats* in Linux)

## Retrieve the Entry Point [GET]

+ Request

    + Headers

            Accept: application/json

+ Response 200 (application/json)
    
    + Body

            {"version" : "1.0.0", "hostname" : "testnode1", "hostid" : "67c557c2790566efcee3f62c3cb5715e", "period" : "1406529548"}

    + Schema
        
            {
                "type" : "object",
                "required" : "false",
                "properties" : {
                        "version" : {
                                "type" : ["string", "null"],
                                "required" : true
                        },
                        "hostname" : {
                                "type" : ["string", "null"],
                                "required" : true
                        },
                        "hostid" : {
                                "type" : ["strin", "null"],
                                "required" : true
                        },
                        "period" : {
                                "type" : "number",
                                "required" : true
                        }
                }
            }

+ Response 503

    + Headers

            Content-Type: application/json

    + Body

            {"error":{"message":"Scheduled maintenance in progress. Please try again later."}}
    
# Group Suites 

Suites are RobotFramework suite files registered by rfdaemon service.

## Suite [/suites/{name}]
A single Suite object with all its details

+ Parameters
    + name (required, sting) ... String `name` of the Suite to perform action with.

+ Model (application/json)
        Plain JSON representation of Suite Resource.

    + Body

            {"suite": "v210 inventory check", "tags": [ "inventory", "BIOS", "BMC", "branding" ], "documentation" : "Performs a basic inventory check of a v210 node"}

### Retrieve a Suite [GET]
+ Response 200 (application/json)

    [Suite][]

## Suites Collection [/suites]
Collection of all Suites.

+ Model (application/json)
    
    Plain JSON representation of Suites Collection Resource. Note the embedded Siutes resource are incomplete representation of the Suite in question. Use the indevidual Suite resource to retrieve its full representation.

    + Body
        
            {
                "suites" :
                    [{
                        "suite": "v210 inventory check", "tags": [ "inventory", "BIOS", "BMC", "branding" ], "documentation" : "Performs a basic inventory check of a v210 node"
                        }, {
                        "suite": "Ethernet bandwidth" , "tags": [ "Ethernet", "benchmark"], "documentation" : "Do a simple bandwidth benchmark of the Ethernev port"
                    }]
                "total" : 2
            }

        
## List all Suites [GET]

+ Response 200 (application/json)

    [Suites Collection][]

## Suites collection version information [/suites/__version]
### Get current version details [GET]
+ Response 200 (application/json)

    + Body

            { "841983b18323440e00dd5683beda21a2fd16bbdc" : 
                { "author" : "Sergey Kleymenov <skleymenov@hurricaneclouds.co>",
                    "date" : "Thu, 29 May 2014 23:09:24 +0400",
                    "title" : "Documentation added"
                }
            }

    + Schema
        
            {
                "type" : "object",
                "required" : true,
                "properties": {
                        "author" : {
                                "type" : "string",
                                "required" : true,
                                "description" : "Author of the last commit"
                        },
                        "date" : {
                                "type": "string",
                                "format" : "date-time",
                                "description" : "Date and time of the last commit"
                        },
                        "title" : {
                                "type" : "string",
                                "required" : true,
                                "description" : "The first line of the last commit message"
                        }
                }
            }





### Update suite library [POST]
+ Response 200 (application/json)

        { "841983b18323440e00dd5683beda21a2fd16bbdc" : 

            { "author" : "Sergey Kleymenov <skleymenov@hurricaneclouds.co>",
                "date" : "Thu, 29 May 2014 23:09:24 +0400",
                "title" : "Documentation added"
            }
        }

# Group Jobs
Jobs resource represents RobotFramework Suite runs, that could be queued,
in progress or finished, as well as results (logs and reports).

## Job [/jobs/{id}]

A single Job object with all its details.
Each Job object has following attributes:

- `id` - The Job object unique ID.
- `hostid` - ID of the host this job was started or queued on.
- `hostname` - Hostname of the machine this job was started or queued on.
- `period` - Period ID (btime from /proc/stats in Linux)
- `suite` - Name of the suite this job is based on.
- `status` - Status of this job, one of the following values is accepted:
        * `queued` - the job is registered in the queue;
        * `in progress` -  the job was started;
        * `fail` - the job was completed with 'fail' result;
        * `pass` - the job was completed with 'pass' result;
- `start_time` - Date and time when the job was started or `NA` if never.
- `end_time` - Date and time when the job was completed or `NA` if never.


+ Parameters
    
    + id (required, number) ... The Job object ID.
    
+ Model (application/json)
        
        Plain JSON representation of Jobs Resource

    + Body 

            { "job" :
                { "id" : "123",
                  "suite" : "test_suite_1",
                  "hostname" : "testnode1",
                  "hostid" : "67c557c2790566efcee3f62c3cb5715e",
                  "period" : "1406529548",
                  "status" : "QUEUED",
                  "start_time" : "NA",
                  "end_time" : "NA"
                }
            }


### Retrieve a Job [GET]
+ Response 200 (application/json)
    
    [Job][]

## Jobs Collection [/jobs{?status}]
Collection of all Jobs.

Jobs collection resource has the following attribute:

- total

+ Model (application/json)

        Plain JSON representation of Jobs Collection Resource.

    + Body

            {
                "jobs" : [
                    {
                            "id" : 1,
                            "suite" : "test_suite_1",
                            "hostname" : "testnode1",
                            "hostid" : "67c557c2790566efcee3f62c3cb5715e",
                            "period" : "1406529548",
                            "status" : "FAIL",
                            "start_time" : "1406530000",
                            "end_time" : "1406530023"
                    },
                    {
                            "id" : "123",
                            "suite" : "test_suite_1",
                            "hostname" : "testnode1",
                            "hostid" : "67c557c2790566efcee3f62c3cb5715e",
                            "period" : "1406529548",
                            "status" : "QUEUED",
                            "start_time" : "NA",
                            "end_time" : "NA"
                    }],
                 "total" : 2
            }

### List All Jobs [GET]
+ Parameters

    + status (optional, string) ... Only jobs with status defined are returned.

    
+ Response 200

    [Jobs Collection][]

# Group Queue
Jobs Queue
